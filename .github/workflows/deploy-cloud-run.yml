name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  SERVICE_NAME: airavat-backend
  REGION: us-central1
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/airavat-backend:${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up gcloud auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure gcloud Docker auth
        run: gcloud auth configure-docker --quiet

      - name: Build and push image
        working-directory: ai_fastapi_agent
        run: |
          docker build -t $IMAGE -f Dockerfile .
          docker push $IMAGE

      - name: Prepare Gemini API key
        run: |
          RAW_KEY='${{ secrets.GEMINI_API_KEY }}'
          # Strip common prefixes if user pasted KEY=value
          CLEAN_KEY="${RAW_KEY#GEMINI_API_KEY=}"
          CLEAN_KEY="${CLEAN_KEY#GEMINI=}"
          CLEAN_KEY="${CLEAN_KEY#API_KEY=}"
          if [ -z "$CLEAN_KEY" ]; then
            echo "Gemini key is empty; check the GEMINI_API_KEY secret" >&2
            exit 1
          fi
          echo "GEMINI_API_KEY=$CLEAN_KEY" >> $GITHUB_ENV

      - name: Prepare HF token
        run: |
          HF_RAW='${{ secrets.HF_TOKEN }}'
          if [ -z "$HF_RAW" ]; then
            echo "HF token is empty; set HF_TOKEN secret to enable genetic analysis" >&2
          fi
          echo "HF_TOKEN=$HF_RAW" >> $GITHUB_ENV

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $IMAGE \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --port 8080 \
            --timeout 240 \
            --set-env-vars ^~^GEMINI_API_KEY=$GEMINI_API_KEY~HF_TOKEN=$HF_TOKEN~ALLOWED_ORIGINS=*~SMPL_ASSETS_BASE_URL=https://storage.googleapis.com/mira-smpl-assets/models

      - name: Describe service env
        run: |
          echo "Service env vars:" && gcloud run services describe $SERVICE_NAME --region $REGION --format='table(spec.template.spec.containers[0].env)'
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region $REGION --format='value(status.url)')
          echo "Service URL: $SERVICE_URL"
          echo "Debug config:" && curl -sS "$SERVICE_URL/debug/config" | jq . || true
          echo "HF test:" && curl -sS "$SERVICE_URL/debug/hf_test" | jq . || true

      - name: Verify Gemini config endpoint
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region $REGION --format='value(status.url)')
          echo "Service URL: $SERVICE_URL"
          curl -sS "$SERVICE_URL/agent/check_gemini_config" | jq .


