name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

env:
  SERVICE_NAME: airavat-api
  REGION: us-central1
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/airavat-api:${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up gcloud auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure gcloud Docker auth
        run: gcloud auth configure-docker --quiet

      - name: Build and push image
        working-directory: ai_fastapi_agent
        run: |
          docker build -t $IMAGE -f Dockerfile .
          docker push $IMAGE

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $IMAGE \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --port 8080 \
            --set-env-vars GEMINI=${{ secrets.GEMINI_API_KEY }},GEMINI_DISABLED=false

      - name: Verify Gemini config endpoint
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region $REGION --format='value(status.url)')
          echo "Service URL: $SERVICE_URL"
          curl -sS "$SERVICE_URL/agent/check_gemini_config" | jq .


